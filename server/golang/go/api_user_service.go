/*
 * HelloApiSchema
 *
 * Practice api schema
 *
 * API version: 1.0.0
 * Contact: doriven@example.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
)

// UserApiService is a service that implements the logic for the UserApiServicer
// This service should implement the business logic for every endpoint for the UserApi API.
// Include any external packages or services that will be required by this service.
type UserApiService struct {
}

// NewUserApiService creates a default api service
func NewUserApiService() UserApiServicer {
	return &UserApiService{}
}

// CreateUser -
func (s *UserApiService) CreateUser(ctx context.Context, createUserInput CreateUserInput) (ImplResponse, error) {
	return Response(200, CreateUserOutput{
		Id:           1,
		EmailAddress: createUserInput.Address,
		LastName:     createUserInput.LastName,
		FirstName:    createUserInput.FirstName,
		Birthday:     createUserInput.Birthday,
		Address:      createUserInput.Address,
	}), nil
}

// GetUser -
func (s *UserApiService) GetUser(ctx context.Context, id int64) (ImplResponse, error) {
	return Response(200, GetUserOutput{
		Id:           id,
		EmailAddress: "example@example.com",
		LastName:     "田中",
		FirstName:    "太郎",
		Birthday:     "2000-01-01",
		Address:      "東京都新宿区西新宿２丁目８−１",
	}), nil
}

// UpdateUser -
func (s *UserApiService) UpdateUser(ctx context.Context, updateUserInput UpdateUserInput) (ImplResponse, error) {
	return Response(200, UpdateUserOutput{
		Id:           updateUserInput.Id,
		EmailAddress: updateUserInput.EmailAddress,
		LastName:     updateUserInput.LastName,
		FirstName:    updateUserInput.FirstName,
		Birthday:     updateUserInput.Birthday,
		Address:      updateUserInput.Address,
	}), nil
}
